<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAALwAA
        AFgAAAB5AAAAlAAAAKkAAAC5AAAAxAAAAMkAAADKAAAAxwAAAL0AAACwAAAAnQAAAIQAAABlAAAAQAAA
        ABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0AAACAAAAAxQAA
        APgAAAD/AAAA/wAAAP8AAAD+AAAA7wAAAN4AAADTAAAAzgAAAM0AAADQAAAA2gAAAOgAAAD6AAAA/wAA
        AP8AAAD/AAAA/gAAAN0AAACdAAAAUAAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADkAAADDAAAA/gAA
        AP8AAADfAAAAoQAAAG4AAABEAAAAIgAAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAAWAAAANgAAAF0AAACMAAAAxQAAAPoAAAD/AAAA6QAAAHQAAAAEAAAAAAAAAAAAAABZAAAA+wAA
        APEAAACJAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAGAAAADPAAAA/wAAALgAAAADAAAAAAAA
        AOcAAADYAAAAGgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAACLAAAA/wAA
        AE8AAAAAAAAA/wAAAJkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ADIAAAD/AAAAZgAAAAAAAAD/AAAAmQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATAAAALgAA
        AEMAAABTAAAAXgAAAGMAAABlAAAAYQAAAFgAAABKAAAANwAAAB8AAAAEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAMgAAAP8AAABmAAAAAAAAAP8AAACZAAAAAAAAAAAAAAAbAAAAXwAAAJkAAADJAAAA8QAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPoAAADZAAAArQAA
        AHcAAAA4AAAAAgAAAAAAAAAyAAAA/wAAAGYAAAAAAAAA/wAAAJwAAABdAAAAxgAAAP4AAAD/AAAA/AAA
        ANUAAACqAAAAiAAAAGwAAABWAAAARQAAADoAAAA1AAAAMwAAADcAAABBAAAATwAAAGIAAAB8AAAAnAAA
        AMMAAADwAAAA/wAAAP8AAADnAAAAigAAAEwAAAD/AAAAZgAAAAAAAAD/AAAA/AAAAP8AAADoAAAAkQAA
        AEYAAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAAsAAAAcQAAAMYAAAD+AAAA/AAAAP8AAABmAAAAAAAAAP8AAAD5AAAAcgAA
        AAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAAADVAAAA/wAAAGYAAAAAAAAA/wAA
        AKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADoAAAD/AAAAZgAA
        AAAAAAD/AAAAmQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMgAA
        AP8AAABmAAAAAAAAAP8AAACZAAAAAAAAAAAAAAAAAAAABQAAADMAAABjAAAAiwAAAKwAAADHAAAA3AAA
        AOwAAAD3AAAA/AAAAP0AAAD6AAAA8QAAAOMAAADQAAAAuAAAAJkAAAB0AAAARwAAABMAAAAAAAAAAAAA
        AAAAAAAyAAAA/wAAAGYAAAAAAAAA/wAAAJkAAAAKAAAAYAAAALQAAADzAAAA/wAAAP8AAAD/AAAA7gAA
        ANIAAAC8AAAArAAAAKEAAACbAAAAmgAAAJ0AAACnAAAAtQAAAMgAAADiAAAA/AAAAP8AAAD/AAAA/QAA
        ANEAAACEAAAAJgAAADIAAAD/AAAAZgAAAAAAAAD/AAAA1gAAAOsAAAD/AAAA8AAAAKwAAABvAAAAPAAA
        ABEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAKgAA
        AFkAAACSAAAA1wAAAP8AAAD9AAAAxQAAAP8AAABmAAAAAAAAAP8AAAD/AAAA0gAAAFYAAAAGAAAAAAAA
        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
        /wEf///hH///8Qf//8GAf/gDwAAAD/gAAH8=
</value>
  </data>
</root>